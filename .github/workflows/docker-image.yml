name: Build and Push Docker Image to Docker Hub

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:

    runs-on: ubuntu-latest


    steps:

uses: actions/checkout@v3
name: Build Docker-image
  run: docker-compose build --no-cache --force-rm
test:
  runs-on: ubuntu-latest
  steps:
uses: actions/checkout@v2
name: Test the Docker image
  run: docker-compose up -d
push_to_registry:
  name: Push Docker image to Docker Hub
  runs-on: ubuntu-latest
  steps:
name: Check out the repo
    uses: actions/checkout@v3


name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2


name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: "{{defaultContext}}"
        push: true
        repository: docker_test
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
docker-compose.yml
version: '3'
services:
  app:
    build:
      context: ./
    volumes:

.:/var/www/html
.env.dev:/var/www/html/.env
ports:
"8080:80"
environment:
APP_ENV=local
APP_DEBUG=true
networks:
laravel
depends_on:
mysql
mysql:
    image: 'mysql/mysql-server:8.0'
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_USER: "laravel"
      MYSQL_PASSWORD: "FhgVoFuOrWspc3TgBIA2K4dZGuJTPwSYBoLnNckcaxy"
      MYSQL_DATABASE: "laravel"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    ports:
3906:3306
  volumes:
'mysql8:/var/lib/mysql'
'./db/init.sql:/docker-entrypoint-initdb.d/01init.sql'
networks:
laravel
networks:
    laravel:
        driver: bridge
volumes:
    mysql8:
        driver: local
